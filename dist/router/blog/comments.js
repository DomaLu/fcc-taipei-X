'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _koaRouter=require('koa-router');var _koaRouter2=_interopRequireDefault(_koaRouter);var _boom=require('boom');var _boom2=_interopRequireDefault(_boom);var _koaConvert=require('koa-convert');var _koaConvert2=_interopRequireDefault(_koaConvert);var _koaReqValidator=require('koa-req-validator');var _koaReqValidator2=_interopRequireDefault(_koaReqValidator);var _validator=require('validator');var _validator2=_interopRequireDefault(_validator);var _posts=require('../../models/posts');var _posts2=_interopRequireDefault(_posts);var _comments=require('../../models/comments');var _comments2=_interopRequireDefault(_comments);var _mixed=require('../../utils/mixed');var _config=require('../../config');var _config2=_interopRequireDefault(_config);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{return Promise.resolve(value).then(function(value){step('next',value)},function(err){step('throw',err)})}}return step('next')})}}var minCommentCount=_config2.default.dbSchema.comment.getMinCommentCount;var maxCommentCount=_config2.default.dbSchema.comment.getMaxCommentCount;var validate=function validate(){return(0,_koaConvert2.default)(_koaReqValidator2.default.apply(undefined,arguments))};var router=new _koaRouter2.default({prefix:'/v1/comments'});router.post('/:postID',validate({'postID:params':['require','isMongoId','Invalid postID'],'content:body':['require','content is required or not valid']}),function(){var _ref=_asyncToGenerator(regeneratorRuntime.mark(function _callee(ctx,next){var authorization,_ref2,userId,postID,post,commentInfo,comment,storedComment;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;// 從 token 找回 user id
authorization=ctx.request.header.authorization;_context.next=4;return(0,_mixed.checkAuth)(authorization);case 4:_ref2=_context.sent;userId=_ref2.userId;if(userId){_context.next=8;break}throw _boom2.default.create(401,'Token is not valid or expired',{code:401002});case 8:// 檢查 postID 是否存在
postID=ctx.params.postID;_context.next=11;return _posts2.default.findById(postID);case 11:post=_context.sent;if(post){_context.next=14;break}throw _boom2.default.create(404,'This post is not exist',{code:404003});case 14:// Save the comment to database and get commentID
commentInfo=_extends({author:userId,post:postID},ctx.request.body);comment=new _comments2.default(commentInfo);_context.next=18;return comment.save();case 18:storedComment=_context.sent;post.comments.push(storedComment._id);post.realCommentCount++;_context.next=23;return post.save();case 23:_context.next=25;return comment.populate('author').execPopulate();case 25:ctx.body={status:'success',comment:(0,_mixed.getCleanComment)(comment),// 此欄位是方便前端使用
post:{post_id:postID,realCommentCount:post.realCommentCount}};_context.next=31;break;case 28:_context.prev=28;_context.t0=_context['catch'](0);if(_context.t0.output&&_context.t0.output.statusCode){ctx.throw(_context.t0.output.statusCode,_context.t0)}else{ctx.throw(500,_context.t0)}case 31:case'end':return _context.stop();}}},_callee,undefined,[[0,28]])}));return function(_x,_x2){return _ref.apply(this,arguments)}}());/*
  此取得 comments API 的目的是讓使用者在
  點選 'view comments' 時才多取得一些 comments (3 ~ 5個)
  而不是一次取得全部
*/router.get('/:postID',validate({'postID:params':['require','isMongoId','Invalid postID'],// 原先擺 count (ctx.request.query.count)，但 koa-req-validator 好像沒辦法用 options 來驗證:<
'currentCommentID:query':['isMongoId','Invalid commentID']}),function(){var _ref3=_asyncToGenerator(regeneratorRuntime.mark(function _callee2(ctx,next){var strCount,validateCommentCount,authorization,_ref4,userId,postID,post,count,commentLists,currentCommentID,currentComment;return regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;// 這裡是 work around，用來驗證 comment count
strCount=ctx.request.query.count;validateCommentCount=_validator2.default.isInt(strCount,{min:minCommentCount,max:maxCommentCount});if(validateCommentCount){_context2.next=5;break}throw _boom2.default.create(422,'Get comment count must be between '+minCommentCount+' ~ '+maxCommentCount+' number',{code:422002});case 5:// 從 token 找回 user id
authorization=ctx.request.header.authorization;_context2.next=8;return(0,_mixed.checkAuth)(authorization);case 8:_ref4=_context2.sent;userId=_ref4.userId;if(userId){_context2.next=12;break}throw _boom2.default.create(401,'Token is not valid or expired',{code:401002});case 12:// 檢查 文章ID 是否存在
postID=ctx.params.postID;_context2.next=15;return _posts2.default.findById(postID);case 15:post=_context2.sent;if(post){_context2.next=18;break}throw _boom2.default.create(404,'This post is not exist',{code:404003});case 18:count=Number(strCount);commentLists=void 0;currentCommentID=ctx.request.query.currentCommentID;// 使用者可以不輸入 currentCommentID，那就表是取最初的幾筆 comments
if(!(typeof currentCommentID==='undefined')){_context2.next=27;break}_context2.next=24;return _comments2.default.find({post:postID}).where('_id').sort('createdAt').limit(count).deepPopulate('author');case 24:commentLists=_context2.sent;_context2.next=35;break;case 27:_context2.next=29;return _comments2.default.findById(currentCommentID);case 29:currentComment=_context2.sent;if(currentComment){_context2.next=32;break}throw _boom2.default.create(404,'This comment is not exist',{code:404004});case 32:_context2.next=34;return _comments2.default.find({post:postID}).where('_id').gt(currentCommentID).sort('createdAt').limit(count).deepPopulate('author');case 34:commentLists=_context2.sent;case 35:ctx.body={status:'success',comment:commentLists};_context2.next=41;break;case 38:_context2.prev=38;_context2.t0=_context2['catch'](0);if(_context2.t0.output&&_context2.t0.output.statusCode){ctx.throw(_context2.t0.output.statusCode,_context2.t0)}else{ctx.throw(500,_context2.t0)}case 41:case'end':return _context2.stop();}}},_callee2,undefined,[[0,38]])}));return function(_x3,_x4){return _ref3.apply(this,arguments)}}());exports.default=router;