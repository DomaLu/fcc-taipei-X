'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _koaRouter=require('koa-router');var _koaRouter2=_interopRequireDefault(_koaRouter);var _lodash=require('lodash');var _lodash2=_interopRequireDefault(_lodash);var _nodeFetch=require('node-fetch');var _nodeFetch2=_interopRequireDefault(_nodeFetch);var _querystring=require('querystring');var _querystring2=_interopRequireDefault(_querystring);var _boom=require('boom');var _boom2=_interopRequireDefault(_boom);var _koaConvert=require('koa-convert');var _koaConvert2=_interopRequireDefault(_koaConvert);var _koaReqValidator=require('koa-req-validator');var _koaReqValidator2=_interopRequireDefault(_koaReqValidator);var _users=require('../../models/users');var _users2=_interopRequireDefault(_users);var _auth=require('../../utils/auth');var _mixed=require('../../utils/mixed');var _config=require('../../config');var _config2=_interopRequireDefault(_config);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{return Promise.resolve(value).then(function(value){step('next',value)},function(err){step('throw',err)})}}return step('next')})}}var validate=function validate(){return(0,_koaConvert2.default)(_koaReqValidator2.default.apply(undefined,arguments))};var router=new _koaRouter2.default({prefix:'/v1/auth/github'});router.post('/',validate({'code:body':['require','code is required']}),function(){var _ref=_asyncToGenerator(regeneratorRuntime.mark(function _callee(ctx,next){var code,_Config$auth$github,accessTokenUrl,client_id,redirect_uri,client_secret,params,OAuthEndpointUrl,response,_ref2,access_token,token_type,userApiUrl,userInfoResponse,_ref3,id,name,email,avatar_url,accountExist,socialAccountExist,token,user,base64URI,userId,_userId;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;code=ctx.request.body.code;_Config$auth$github=_config2.default.auth.github,accessTokenUrl=_Config$auth$github.accessTokenUrl,client_id=_Config$auth$github.client_id,redirect_uri=_Config$auth$github.redirect_uri,client_secret=_Config$auth$github.client_secret;params={client_id:client_id,redirect_uri:redirect_uri,client_secret:client_secret,code:code};OAuthEndpointUrl=accessTokenUrl+'?'+_querystring2.default.stringify(params);_context.next=7;return(0,_nodeFetch2.default)(OAuthEndpointUrl,{method:'post',headers:{'Accept':'application/json'}});case 7:response=_context.sent;if(response.ok){_context.next=10;break}throw _boom2.default.create(response.status,response.statusText,{code:400000});case 10:_context.next=12;return response.json();case 12:_ref2=_context.sent;access_token=_ref2.access_token;token_type=_ref2.token_type;userApiUrl=_config2.default.auth.github.userApiUrl(access_token);_context.next=18;return(0,_nodeFetch2.default)(userApiUrl,{method:'get',Authorization:'token '+access_token});case 18:userInfoResponse=_context.sent;if(userInfoResponse.ok){_context.next=21;break}throw _boom2.default.create(userInfoResponse.status,userInfoResponse.statusText,{code:400000});case 21:_context.next=23;return userInfoResponse.json();case 23:_ref3=_context.sent;id=_ref3.id;name=_ref3.name;email=_ref3.email;avatar_url=_ref3.avatar_url;_context.next=30;return _users2.default.findOne({email:email,social:false});case 30:accountExist=_context.sent;if(!accountExist){_context.next=33;break}throw _boom2.default.create(403,'The email has already been registered in our web approach',{code:403007});case 33:_context.next=35;return _users2.default.findOne({github:id});case 35:socialAccountExist=_context.sent;token=void 0;if(socialAccountExist){_context.next=54;break}_context.next=40;return _users2.default.findOne({email:email});case 40:user=_context.sent;if(!user){_context.next=43;break}throw _boom2.default.create(403,'The email has already been registered in other social approach',{code:403001});case 43:_context.next=45;return(0,_mixed.encodeRemoteImg)(avatar_url);case 45:base64URI=_context.sent;user=new _users2.default({email:email,nickname:name,avatar:base64URI,isEmailActived:true,social:true,github:id});_context.next=49;return user.save();case 49:userId=user._id;token=_auth.getToken['JWT']({userId:userId,email:email});return _context.abrupt('return',ctx.response.body={status:'success',auth:_extends({token:token},(0,_mixed.getCleanUser)(user),{code:200012,message:'Github signin success'})});case 54:// 曾經 signin 過
_userId=socialAccountExist._id;token=_auth.getToken['JWT']({userId:_userId,email:email});return _context.abrupt('return',ctx.response.body={status:'success',auth:_extends({token:token},(0,_mixed.getCleanUser)(socialAccountExist)),code:200011,message:'Github signup success'});case 57:_context.next=62;break;case 59:_context.prev=59;_context.t0=_context['catch'](0);if(_context.t0.output.statusCode){ctx.throw(_context.t0.output.statusCode,_context.t0)}else{ctx.throw(500,_context.t0)}case 62:case'end':return _context.stop();}}},_callee,undefined,[[0,59]])}));return function(_x,_x2){return _ref.apply(this,arguments)}}());exports.default=router;