'use strict';var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};require('babel-polyfill');var _koa=require('koa');var _koa2=_interopRequireDefault(_koa);var _koaConvert=require('koa-convert');var _koaConvert2=_interopRequireDefault(_koaConvert);var _path=require('path');var _path2=_interopRequireDefault(_path);var _koaBodyparser=require('koa-bodyparser');var _koaBodyparser2=_interopRequireDefault(_koaBodyparser);var _koaLogger=require('koa-logger');var _koaLogger2=_interopRequireDefault(_koaLogger);var _koaConnectHistoryApiFallback=require('koa-connect-history-api-fallback');var _koaConnectHistoryApiFallback2=_interopRequireDefault(_koaConnectHistoryApiFallback);var _koaJwt=require('koa-jwt');var _koaJwt2=_interopRequireDefault(_koaJwt);var _kcors=require('kcors');var _kcors2=_interopRequireDefault(_kcors);var _koaRouter=require('koa-router');var _koaRouter2=_interopRequireDefault(_koaRouter);var _signup=require('./router/auth/signup');var _signup2=_interopRequireDefault(_signup);var _signin=require('./router/auth/signin');var _signin2=_interopRequireDefault(_signin);var _accountSettings=require('./router/auth/account-settings');var _accountSettings2=_interopRequireDefault(_accountSettings);var _forgotPassword=require('./router/auth/forgot-password');var _forgotPassword2=_interopRequireDefault(_forgotPassword);var _verifyToken=require('./router/auth/verifyToken');var _verifyToken2=_interopRequireDefault(_verifyToken);var _facebook=require('./router/oauth/facebook');var _facebook2=_interopRequireDefault(_facebook);var _twitter=require('./router/oauth/twitter');var _twitter2=_interopRequireDefault(_twitter);var _google=require('./router/oauth/google');var _google2=_interopRequireDefault(_google);var _github=require('./router/oauth/github');var _github2=_interopRequireDefault(_github);var _posts=require('./router/blog/posts');var _posts2=_interopRequireDefault(_posts);var _comments=require('./router/blog/comments');var _comments2=_interopRequireDefault(_comments);var _checkPostLimit=require('./router/blog/checkPostLimit');var _checkPostLimit2=_interopRequireDefault(_checkPostLimit);require('./config/database');var _config=require('./config');var _config2=_interopRequireDefault(_config);var _socket=require('./socket');var _socket2=_interopRequireDefault(_socket);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{return Promise.resolve(value).then(function(value){step('next',value)},function(err){step('throw',err)})}}return step('next')})}}//mongod --dbpath ~/data/db/
var app=new _koa2.default;app.use(function(){var _ref=_asyncToGenerator(regeneratorRuntime.mark(function _callee(ctx,next){var status,code;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return next();case 3:status=ctx.status||404;if(status===404){ctx.throw(404)}_context.next=12;break;case 7:_context.prev=7;_context.t0=_context['catch'](0);// console.log(err.message)  //real error message
// console.log(err.status)   //status code
// console.log(err.name)     //status code name
ctx.status=_context.t0.status||500;if(_context.t0.data&&_context.t0.data.code){code=_context.t0.data.code;delete _context.t0.data.code;//const data = err.data
ctx.body=_extends({status:'error',message:_context.t0.message,code:code},_context.t0.data)}else if(_context.t0.status===401){// JWT Error Catcher
ctx.body={status:'error',message:_context.t0.message,code:401004}}else{ctx.body={status:'error',message:_context.t0.message,code:-1}}if(ctx.status>=500){ctx.app.emit('internalError',_context.t0,ctx)}case 12:case'end':return _context.stop();}}},_callee,undefined,[[0,7]])}));return function(_x,_x2){return _ref.apply(this,arguments)}}());app.on('internalError',function(err,ctx){console.log(err);console.log('Maybe someone is hacking your server')});//app.use(logger())
app.use((0,_koaConvert2.default)((0,_kcors2.default)()));app.use((0,_koaConvert2.default)((0,_koaBodyparser2.default)()));app.use((0,_koaConvert2.default)((0,_koaConnectHistoryApiFallback2.default)({verbose:false})));if(process.env.NODE_ENV!=='production'){var webpack=require('webpack');var WebpackDevMiddleware=require('koa-webpack-dev-middleware');var webpackDevelopmentConfig=require('../webpack.development');app.use((0,_koaConvert2.default)(WebpackDevMiddleware(webpack(webpackDevelopmentConfig),{stats:{colors:true,cached:false,chunks:false,hash:false,version:false,warnings:false,children:false,assets:false}})))}else{var serve=require('koa-static');app.use(serve(_path2.default.join(__dirname,'../dist')))}app.use((0,_koaConvert2.default)((0,_koaJwt2.default)({secret:process.env.JWT_SECRET}).unless({path:['/v1/signup','/v1/signin','/v1/forgot_password','/v1/verifyToken','/v1/auth/facebook','/v1/auth/twitter','/v1/auth/google','/v1/auth/github','/favicon.ico']})));var server=app.listen(_config2.default.port,function(){console.log('listening on port '+_config2.default.port)});var io=require('socket.io')(server);(0,_socket2.default)(io);app.use(_signup2.default.routes()).use(_signup2.default.allowedMethods({throw:true}));app.use(_signin2.default.routes()).use(_signin2.default.allowedMethods({throw:true}));app.use(_accountSettings2.default.routes()).use(_accountSettings2.default.allowedMethods({throw:true}));app.use(_forgotPassword2.default.routes()).use(_forgotPassword2.default.allowedMethods({throw:true}));app.use(_verifyToken2.default.routes()).use(_verifyToken2.default.allowedMethods({throw:true}));app.use(_facebook2.default.routes()).use(_facebook2.default.allowedMethods({throw:true}));app.use(_twitter2.default.routes()).use(_twitter2.default.allowedMethods({throw:true}));app.use(_google2.default.routes()).use(_google2.default.allowedMethods({throw:true}));app.use(_github2.default.routes()).use(_github2.default.allowedMethods({throw:true}));app.use(_posts2.default.routes()).use(_posts2.default.allowedMethods({throw:true}));app.use(_comments2.default.routes()).use(_comments2.default.allowedMethods({throw:true}));app.use(_checkPostLimit2.default.routes()).use(_checkPostLimit2.default.allowedMethods({throw:true}));