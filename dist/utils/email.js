'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.checkEmailStatus=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var checkEmailStatus=exports.checkEmailStatus=function(){var _ref=_asyncToGenerator(regeneratorRuntime.mark(function _callee(ctx,next){var nodemailerInfo,user;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:nodemailerInfo=ctx.state.nodemailerInfo,user=(0,_mixed.getCleanUser)(ctx.state.user);if(!(nodemailerInfo.rejected.length===0)){_context.next=5;break}ctx.response.body={status:'success',code:200001,message:'You can go to check your email'};_context.next=6;break;case 5:throw _boom2.default.create(500,'Your data is bad and you should feel bad',{code:500002});case 6:case'end':return _context.stop();}}},_callee,this)}));return function checkEmailStatus(_x,_x2){return _ref.apply(this,arguments)}}();exports.mailTransport=mailTransport;var _boom=require('boom');var _boom2=_interopRequireDefault(_boom);var _nodemailer=require('nodemailer');var _nodemailer2=_interopRequireDefault(_nodemailer);var _mixed=require('../utils/mixed');var _config=require('../config');var _config2=_interopRequireDefault(_config);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{return Promise.resolve(value).then(function(value){step('next',value)},function(err){step('throw',err)})}}return step('next')})}}function mailTransport(userInfo,routePath,option){var emailToken=arguments.length>3&&arguments[3]!==undefined?arguments[3]:undefined;return new Promise(function(resolve,reject){var transporter=_nodemailer2.default.createTransport(_config2.default.gmailConfig);var message=void 0;if(emailToken){message=_extends({},_config2.default.registerMailTemplate,{from:_config2.default.gmailSender,to:userInfo.email,html:'<h1>Hi '+userInfo.nickname+'</h1>\n           <h2>\n             <a href=\'http://localhost:3000/'+routePath+'?token='+emailToken+'\'>\n               Click here to '+option+' your account\n             </a>\n           </h2>'//html: `<h1>Hi ${userInfo.nickname}</h1> ${Config.registerMailTemplate.html}`
})}else{message=_extends({},_config2.default.registerMailTemplate,{to:userInfo.email,html:'<h1>Hi '+userInfo.nickname+'</h1>\n           <h2>\n             Profile setting has been modified\n           </h2>'})}transporter.verify(function(err,success){if(err){var SMTPError=_boom2.default.create(500,'SMTP server unavailable to verify',{code:503001});return reject(SMTPError)}else{transporter.sendMail(message,function(err,info){if(err){var _SMTPError=_boom2.default.create(500,'SMTP server unavailable to send',{code:503002});return reject(_SMTPError)}resolve(info)})}})})}