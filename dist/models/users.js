'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _mongoose=require('mongoose');var _mongoose2=_interopRequireDefault(_mongoose);var _mongooseTimestamp=require('mongoose-timestamp');var _mongooseTimestamp2=_interopRequireDefault(_mongooseTimestamp);var _bcryptjsThen=require('bcryptjs-then');var _bcryptjsThen2=_interopRequireDefault(_bcryptjsThen);var _boom=require('boom');var _boom2=_interopRequireDefault(_boom);var _config=require('../config');var _config2=_interopRequireDefault(_config);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{return Promise.resolve(value).then(function(value){step('next',value)},function(err){step('throw',err)})}}return step('next')})}}var SALT_WORK_FACTOR=10;var Schema=_mongoose2.default.Schema;var UserSchema=new Schema({email:{type:String,required:false,index:{unique:true}},hashedPassword:{type:String},nickname:{type:String,required:true},avatar:{type:String,required:true},isEmailActived:{type:Boolean,default:false},verifyEmailToken:{type:String},isEmailDeleted:{type:Boolean,default:false},nicknameChangeLimit:{type:Date,default:_config2.default.dbSchema.user.nicknameChangeLimit()},createdPostLimit:{type:Date,default:_config2.default.dbSchema.post.createdPostLimit()},social:{type:Boolean,default:false},facebook:{type:String},github:{type:String},twitter:{type:String},google:{type:String}});UserSchema.plugin(_mongooseTimestamp2.default);UserSchema.path('nickname').required(true,'nickname is required');//UserSchema.path('email').required(true, 'email is required')
UserSchema.virtual('password').set(function(value){this.__password=value}).get(function(){return this.__password});UserSchema.pre('validate',function(next){if(this.password){if(this.password.length<6){var err=_boom2.default.create(422,'Length of password must >= 6',{code:422001});next(err)}}next()});UserSchema.pre('save',function(){var _ref=_asyncToGenerator(regeneratorRuntime.mark(function _callee(next){var err;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!this.password){//return next()
next()}_context.prev=1;_context.next=4;return _bcryptjsThen2.default.hash(this.password);case 4:this.hashedPassword=_context.sent;next();_context.next=12;break;case 8:_context.prev=8;_context.t0=_context['catch'](1);_context.t0=_boom2.default.create(500,'Bcrypt error',{code:500001});next(_context.t0);case 12:case'end':return _context.stop();}}},_callee,this,[[1,8]])}));return function(_x){return _ref.apply(this,arguments)}}());UserSchema.methods.validatePassword=function(){var _ref2=_asyncToGenerator(regeneratorRuntime.mark(function _callee2(_password){return regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _bcryptjsThen2.default.compare(_password,this.hashedPassword);case 2:return _context2.abrupt('return',_context2.sent);case 3:case'end':return _context2.stop();}}},_callee2,this)}));function validatePassword(_x2){return _ref2.apply(this,arguments)}return validatePassword}();exports.default=_mongoose2.default.model('User',UserSchema);